#!/bin/sh
# ------------------------------
# PaperMC auto-updater
#
# /runner/entrypoint
# ------------------------------

# default auto-updating JAR path.
JAR_PATH="/home/container/app.jar"

JVM_OPTS="$@ $JVM_OPTS "

echo "entrypoint > In directory: '$(pwd)'"

echo "entrypoint > Found JVM Options: '$JVM_OPTS'"
echo "entrypoint > Found Application Options: '$APP_OPTS'"

if [ -z ${PRODUCT} ];
then
	# not set
	echo "entrypoint > product not set!"
	exit 2
fi

echo "entrypoint > Welcome! using product: $PRODUCT"

if [ ! -z ${SHOULD_CREATE_EULA_TXT} ];
then
	echo "Creating eula.txt at $(pwd)/eula.txt"
	echo "eula=true" > ./eula.txt
fi

echo "entrypoint > Checking if OVERRIDE_JAR_PATH env variable was set..."

if [ ! -z ${OVERRIDE_JAR_PATH} ];
then
	# Variable was set, skip the download and pass the variable to the runner.
	echo "entrypoint > OVERRIDE_JAR_PATH found! ('${OVERRIDE_JAR_PATH}') Starting... (in directory '$(pwd)')"
	JAR_PATH=$OVERRIDE_JAR_PATH
	# source runner to pass through env vars
	. /runner/runner
else
	echo "entrypoint > Checking if the OVERRIDE_VERSION env variable was set..."

	if [ -z ${OVERRIDE_VERSION} ];
	then
		# Variable is not set.
		echo "entrypoint > Variable not set, querying for latest supported minecraft version..."
		LATEST_MC=$(dltool latestmc $PRODUCT)
		echo "entrypoint > Found version $LATEST_MC! Downloading latest build..."
	else
		# Variable is set.
		echo "entrypoint > Override Variable set! Using overridden version $OVERRIDE_VERSION"
		LATEST_MC=$OVERRIDE_VERSION
	fi
	
	echo "entrypoint > Checking if the OVERRIDE_JAR_DL_PATH env variable was set..."
	
	if [ -z ${OVERRIDE_JAR_DL_PATH} ];
	then
		# Variable is not set
		echo "entrypoint > Variable not set, using default ($JAR_PATH)..."
	else
		# Variable is set.
		echo "entrypoint > Override Variable set! Using overriden JAR download path '$OVERRIDE_JAR_DL_PATH'"
		JAR_PATH=$OVERRIDE_JAR_DL_PATH	
	fi
	
	# Flag breakdown
	# ----------
	# --timeout=30 - 30 second timeout
	# --tries=5 - retry up to 5 times after timeout
	# --retry-connrefused - Attempt to retry even if connection was refused (eg. webserver restarting)
	# --show-progress - always show progress bar (even with -q)
	# -q - quiet (no output)
	# -O - output to file $JAR_PATH
	wget --timeout=30 --tries=5 --retry-connrefused --show-progress -q -O $JAR_PATH $(dltool download $PRODUCT $LATEST_MC)

	if [ $? -eq 0 ]; then
		echo "entrypoint > Successfully downloaded! Starting... (in directory '$(pwd)')"
		echo ""
		# source runner to pass through env vars
		. /runner/runner
	else
		echo "entrypoint > Failed to download $PRODUCT. Exiting..."
		exit 1
	fi
fi
