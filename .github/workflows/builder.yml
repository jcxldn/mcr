name: builder

on: [push, workflow_dispatch]

jobs:
  papermc-alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx (base-papermc-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f common/papermc/base.alpine.Dockerfile -t jcxldn/minecraft-runner:base-papermc-alpine .
      -
        name: Run Buildx (paper-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f paper/alpine.Dockerfile -t jcxldn/minecraft-runner:paper-alpine .
      -
        name: Run Buildx (waterfall-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f waterfall/alpine.Dockerfile -t jcxldn/minecraft-runner:waterfall-alpine .
      -
        name: Run Buildx (purpur-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f purpur/alpine.Dockerfile -t jcxldn/minecraft-runner:purpur-alpine .
      -
        name: Run Buildx (velocity-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f velocity/alpine.Dockerfile -t jcxldn/minecraft-runner:velocity-alpine .
  geyser-alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx (geyser-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f geyser/alpine.Dockerfile -t jcxldn/minecraft-runner:geyser-alpine .
  fabric-alpine:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx (fabric-alpine)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
            -f fabric/alpine.Dockerfile -t jcxldn/minecraft-runner:fabric-alpine .
  test:
    runs-on: ubuntu-latest
    needs: ["papermc-alpine", "geyser-alpine", "fabric-alpine"]
    strategy:
      matrix: 
        # Specify servers with shared syntax
        tag: ["paper-alpine", "purpur-alpine", "fabric-alpine"]
        pattern: ["Done ("]
        stopcmd: ["stop"]
        # Manually include servers with differing syntax
        include:
          - tag: "geyser-alpine"
            pattern: "Done ("
            stopcmd: "geyser stop"
          - tag: "velocity-alpine"
            pattern: "Done ("
            stopcmd: "end"
          - tag: "waterfall-alpine"
            pattern: "Listening on"
            stopcmd: "end"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Run test script in container
        # yaml syntax error if this is all done on one line
        run: |
            echo ::group::Creating docker container && docker run --rm --entrypoint sh -v $(pwd):/src -v /var/run/docker.sock:/var/run/docker.sock alpine:latest -c 'echo ::endgroup:: && echo ::group::Installing script dependencies && apk add --no-cache coreutils bash screen grep docker-cli && cd /src/.github/ci && chmod +x test.sh && echo ::endgroup:: && ./test.sh jcxldn/minecraft-runner:${{ matrix.tag }} "${{ matrix.pattern }}" "${{ matrix.stopcmd }}"'